// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using liberumVeto.database;

#nullable disable

namespace liberumVeto.Migrations
{
    [DbContext(typeof(databaseContext))]
    [Migration("20241122191746_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("liberumVeto.database.tables.question", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("setid")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("setid");

                    b.ToTable("question");
                });

            modelBuilder.Entity("liberumVeto.database.tables.questionSet", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("question_set");
                });

            modelBuilder.Entity("liberumVeto.database.tables.questionStatistic", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<int>("againstQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("forQuantity")
                        .HasColumnType("integer");

                    b.Property<long>("questionid")
                        .HasColumnType("bigint");

                    b.Property<long>("votingSessionid")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("questionid");

                    b.HasIndex("votingSessionid");

                    b.ToTable("question_statistic");
                });

            modelBuilder.Entity("liberumVeto.database.tables.votingSession", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<long>("setid")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("votingDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("setid");

                    b.ToTable("voting_session");
                });

            modelBuilder.Entity("liberumVeto.database.tables.question", b =>
                {
                    b.HasOne("liberumVeto.database.tables.questionSet", "set")
                        .WithMany()
                        .HasForeignKey("setid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("set");
                });

            modelBuilder.Entity("liberumVeto.database.tables.questionStatistic", b =>
                {
                    b.HasOne("liberumVeto.database.tables.question", "question")
                        .WithMany()
                        .HasForeignKey("questionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liberumVeto.database.tables.votingSession", "votingSession")
                        .WithMany()
                        .HasForeignKey("votingSessionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");

                    b.Navigation("votingSession");
                });

            modelBuilder.Entity("liberumVeto.database.tables.votingSession", b =>
                {
                    b.HasOne("liberumVeto.database.tables.questionSet", "set")
                        .WithMany()
                        .HasForeignKey("setid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("set");
                });
#pragma warning restore 612, 618
        }
    }
}
